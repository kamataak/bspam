[{"path":"https://kamataak.github.io/bspam/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Akihito Kamata. Author, maintainer. Cornelis J. Potgieter. Author. Joseph F. T. Nese. Author. Yusuf Kara. Author. Sarunya Somsong. Author. Kuo Wang. Author.","code":""},{"path":"https://kamataak.github.io/bspam/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kamata , Potgieter C, Nese J, Kara Y, Somsong S, Wang K (2023). bspam: Binomial SPeed-Accuracy Modeling. R package version 1.2.2, https://github.com/kamataak/bspam.","code":"@Manual{,   title = {bspam: Binomial SPeed-Accuracy Modeling},   author = {Akihito Kamata and Cornelis J. Potgieter and Joseph F. T. Nese and Yusuf Kara and Sarunya Somsong and Kuo Wang},   year = {2023},   note = {R package version 1.2.2},   url = {https://github.com/kamataak/bspam}, }"},{"path":[]},{"path":"https://kamataak.github.io/bspam/index.html","id":"speed-accuracy-psychometric-modeling-for-binomial-count-outcome-data-with-r","dir":"","previous_headings":"","what":"Speed-Accuracy Psychometric Modeling for Binomial Count Outcome Data with R","title":"Binomial SPeed-Accuracy Modeling","text":"bspam R package contains functions fit speed-accuracy psychometric model count outcome data (Potgieter, Kamata & Kara, 2017; Kara, Kamata, Potgieter & Nese, 2020), accuracy modeled binomial count latent variable model. example, use modeling technique allows model-based calibration scoring oral reading fluency (ORF) assessment data.","code":""},{"path":"https://kamataak.github.io/bspam/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation:","title":"Binomial SPeed-Accuracy Modeling","text":"install bspam package, follow steps . MultiGHQuad package needs installed. May 31, 2022, MultiGHQuad package removed CRAN, download archive package file https://cran.r-project.org/src/contrib/Archive/MultiGHQuad/ manually install. Install remotes package, running following R code. Install bspam running following R code. bspam uses JAGS Stan Bayesian estimation. Download JAGS installation file https://sourceforge.net/projects/mcmc-jags/files/JAGS/ per operating system requirements follow installation steps. bspam internally uses runjags package interface JAGS. runjags automatically installed along R packages bspam depends . Stan can installed following steps explained : https://github.com/stan-dev/rstan/wiki/RStan-Getting-Started. Note steps show installation RStan, bspam uses internal package run Stan code. Please follow installation steps carefully along recommended versions R RStudio prevent issues releated running Stan bspam.","code":"if(!requireNamespace(\"remotes\", quietly = TRUE)) install.packages(\"remotes\") remotes::install_github(\"kamataak/bspam\")"},{"path":"https://kamataak.github.io/bspam/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic Usage:","title":"Binomial SPeed-Accuracy Modeling","text":"recommended data prepared long-format data frame, row data unique case, namely, specific task specific student specific testing occasion. data set minimally contain following 7 variables: (1) individual ID, (2) group ID, (3) testing occasion ID, (4) task ID, (5) maximum number attempts task, (6) number successes task, (7) time took complete task. Variable names order variables can flexible data frame. running functions package, variable names required variables need specified. bspam package comes several data sets. demonstrate basic usage key functions package, example ORF assessment data set used . context ORF assessment, task passage given student read aloud, attempt student’s reading word passage, scored correct (.e., success) . number successes task number words correctly read passage. data set passage2 passage-level student data consisted reading accuracy time data 12 passages 85 students. Although 85 students assigned 12 passages, number passages read 85 students varied 2 12 passages. number students per passage 59 79. Load required packages, load/view example data set passage2.","code":"library(tidyverse) library(bspam) View(passage2)"},{"path":"https://kamataak.github.io/bspam/index.html","id":"passage-calibration","dir":"","previous_headings":"Basic Usage:","what":"Passage Calibration","title":"Binomial SPeed-Accuracy Modeling","text":"Calibrate passages using fit.model() function implementing Monte Carlo EM algorithm described Potgieter et al. (2017). default, standard errors model parameters estimated. allow one increase number Monte-Carlo iterations reps.improve quality model parameter estimates, minimizing computation time. number reps.50 100 realistic calibrations. SE’s model parameters required running scoring() function estimate WCPM scores next step. standard errors model parameters desired, additional argument se = \"analytic\" se = \"bootstrap\" needs added fit.model() function. Passage calibration can also done using est=\"mcmc\" option, implements fully Bayesian approach Gibbs sampling Hamiltonian Monte Carlo. bspam employs JAGS Stan, respectively, two Bayesian estimation methods. Currently, JAGS used default estimations calibration data due faster sampling missing observations. Stan used case complete data, namely, students read passages. bspam runs JAGS auto mode, require user supply specifications Bayesian estimation (e.g., number iterations) monitor convergence. Standard errors provided default standard deviations posterior distributions.","code":"MCEM_run <- fit.model(person.data=passage2,                       person.id = \"id.student\",                       task.id = \"id.passage\",                       max.counts = \"numwords.pass\",                       obs.counts = \"wrc\",                       time = \"sec\",                       k.in = 5,                       reps.in = 50,                       est = \"mcem\",                       verbose=TRUE,                       se=\"analytic\") MCEM_run Bayes_run <- fit.model(person.data=passage2,                        person.id = \"id.student\",                        task.id = \"id.passage\",                        max.counts = \"numwords.pass\",                        obs.counts = \"wrc\",                        time = \"sec\",                        est = \"mcmc\",                        verbose=TRUE) Bayes_run"},{"path":"https://kamataak.github.io/bspam/index.html","id":"estimating-wcpm-scores-1","dir":"","previous_headings":"Basic Usage:","what":"Estimating WCPM scores 1","title":"Binomial SPeed-Accuracy Modeling","text":"estimate WCPM scores, can two steps. Step 1: Prepare data using prep() function, required data scoring() function prepared, including changing variable names generation natural-logarithm time data. output prep() function list two components. data.long component data frame, long format student response data, data.wide list contains four components, including wide format data, well information number passages number words passage. One benefit two-step approach can use another utility function get.cases() generate list unique cases output prep() function. list can useful interest estimate WCPM scores selected cases. Generate list unique cases: Step 2: Run scoring() function estimate WCPM scores. Note pass output object MCEM_run passage calibration phase, well manipulated data data.long Step 1. default, WCPM scores estimated cases data. Additionally, several estimator options standard error estimation options. example, maximum priori (MAP) estimators model parameter estimation analytic approach estimate standard errors used. computations WCPM scores selected cases desired, can create list cases provide list cases = argument. list cases one-variable data frame variable name cases. format case values : studentid_season, just like output get.cases() function shown earlier document. Also, can specify set passages scale WCPM scores. WCPM scores scaled set passages different set passages student read, set passages referred external passage set. use external passage set particularly important make estimated WCPM scores comparable students read different sets passages, well within students longitudinal data, student likely read different sets passages. mentioned , fully Bayesian approach can also used estimator scoring() function. output object passage calibration phase used per calib.data argument can one obtained fit.model() using fully Bayesian “mcem” estimator. Note est=\"mcmc\" used, need use se= argument. Standard errors provided default standard deviations posterior distributions along 95% high density intervals (.e., confidence intervals). example using fully Bayesian approach estimating WCPM scores external passages used former example:","code":"data <- prep(data = passage2,              person.id = \"id.student\",              occasion = \"occasion\",              group = \"grade\",              task.id = \"id.passage\",              max.counts = \"numwords.pass\",              obs.counts = \"wrc\",              time = \"sec\") get.cases(data$data.long) WCPM_all <- scoring(calib.data=MCEM_run,                      person.data = data$data.long,                     est = \"map\",                      se = \"analytic\") summary(WCPM_all) sample.cases <- data.frame(cases = c(\"2033_fall\", \"2043_fall\", \"2089_fall\")) WCPM_sample <- scoring(calib.data=MCEM_run,                         person.data = data$data.long,                        cases = sample.cases,                        est = \"map\",                         se = \"analytic\") summary(WCPM_sample) WCPM_sample_ext1 <- scoring(calib.data=MCEM_run,                              person.data = data$data.long,                             cases = sample.cases,                              external = c(\"32004\",\"32010\",\"32015\",\"32016\",\"33003\",\"33037\"),                             est = \"map\",                              se = \"analytic\") summary(WCPM_sample_ext1) WCPM_sample_ext1_bayes <- scoring(calib.data=MCEM_run,                                    person.data = data$data.long,                                   cases = sample.cases,                                    external = c(\"32004\",\"32010\",\"32015\",\"32016\",\"33003\",\"33037\"),                                   est = \"mcmc\") summary(WCPM_sample_ext1_bayes)"},{"path":"https://kamataak.github.io/bspam/index.html","id":"estimating-wcpm-scores-2","dir":"","previous_headings":"Basic Usage:","what":"Estimating WCPM scores 2","title":"Binomial SPeed-Accuracy Modeling","text":"Alternatively, can run scoring() function without Step 1 , entering original data passage2 directly follows. Please see package website detailed usage package.","code":"WCPM_sample_ext2 <- scoring(calib.data=MCEM_run,                              person.data = passage2,                             person.id = \"id.student\",                             occasion = \"occasion\",                             group = \"grade\",                             task.id = \"id.passage\",                             max.counts = \"numwords.pass\",                             obs.counts = \"wrc\",                             time = \"sec\",                             cases = sample.cases,                              external = c(\"32004\",\"32010\",\"32015\",\"32016\",\"33003\",\"33037\"),                             est = \"map\",                              se = \"analytic\") summary(WCPM_sample_ext2)"},{"path":[]},{"path":"https://kamataak.github.io/bspam/index.html","id":"copyright-statement","dir":"","previous_headings":"","what":"Copyright Statement","title":"Binomial SPeed-Accuracy Modeling","text":"Copyright (C) 2022-2023 ORF Project Team bspam package free software: can redistribute /modify terms GNU General Public License published Free Software Foundation, either version 3 License, later version. bspam package distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See GNU General Public License details. received copy GNU General Public License along package. , see http://www.gnu.org/licenses/.","code":""},{"path":"https://kamataak.github.io/bspam/reference/MCEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Passage calibration data set — MCEM","title":"Passage calibration data set — MCEM","text":"Passage calibration data set","code":""},{"path":"https://kamataak.github.io/bspam/reference/MCEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Passage calibration data set — MCEM","text":"","code":"MCEM"},{"path":"https://kamataak.github.io/bspam/reference/MCEM.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Passage calibration data set — MCEM","text":"object class mcem length 2.","code":""},{"path":"https://kamataak.github.io/bspam/reference/bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes function when running mcem with mcmc setting — bayes","title":"Bayes function when running mcem with mcmc setting — bayes","text":"Bayes function running mcem mcmc setting","code":""},{"path":"https://kamataak.github.io/bspam/reference/bayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayes function when running mcem with mcmc setting — bayes","text":"","code":"bayes(   person.data = NA,   person.id = \"\",   task.id = \"\",   max.counts = \"\",   obs.counts = \"\",   time = \"\",   parallel = T,   n.chains = NA,   thin = 1,   iter = NA,   burn = NA )"},{"path":"https://kamataak.github.io/bspam/reference/bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayes function when running mcem with mcmc setting — bayes","text":"person.data - student reading data person.id column name data represents unique individual identifier. task.id column name data represents unique task identifier. max.counts column name data represents number words task. obs.counts column name data represents words read correctly case. time column name data represents time, seconds, case. parallel parallel=T, #logical, run parallel? \"T\" \"F\" n.chains int., number chains thin int, thinning interval, .k., period saving samples iter int., number iterations burn-period burn int., number burn-iterations","code":""},{"path":"https://kamataak.github.io/bspam/reference/bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayes function when running mcem with mcmc setting — bayes","text":"list","code":""},{"path":"https://kamataak.github.io/bspam/reference/bayes.wcpm.html","id":null,"dir":"Reference","previous_headings":"","what":"Bayes function when running mcem with mcmc setting — bayes.wcpm","title":"Bayes function when running mcem with mcmc setting — bayes.wcpm","text":"Bayes function running mcem mcmc setting","code":""},{"path":"https://kamataak.github.io/bspam/reference/bayes.wcpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bayes function when running mcem with mcmc setting — bayes.wcpm","text":"","code":"bayes.wcpm(   calib.data = NA,   person.data = NA,   person.id = NULL,   task.id = NULL,   occasion = NULL,   group = NULL,   max.counts = NULL,   obs.counts = NULL,   time = NULL,   cases = NULL,   external = NULL,   parallel = T,   n.chains = NA,   iter = NA,   burn = NA,   thin = 1 )"},{"path":"https://kamataak.github.io/bspam/reference/bayes.wcpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bayes function when running mcem with mcmc setting — bayes.wcpm","text":"calib.data - fit.model class object person.data - individual reading data person.id column name data represents unique individual identifier. task.id column name data represents unique task identifier. occasion column name data represents unique occasion. group column name data represents unique group. max.counts column name data represents number words task. obs.counts column name data represents words read correctly case. time column name data represents time, seconds, case. cases - student id vectors, directly use passage data calib.data provided external - NULL, use student read passages estimating parallel parallel=T, #logical, run parallel? \"T\" \"F\" n.chains int., number chains iter int., number iterations burn-period burn int., number burn-iteration thin int, thinning interval, .k., period saving samples","code":""},{"path":"https://kamataak.github.io/bspam/reference/bayes.wcpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bayes function when running mcem with mcmc setting — bayes.wcpm","text":"list","code":""},{"path":"https://kamataak.github.io/bspam/reference/exclude_passages.html","id":null,"dir":"Reference","previous_headings":"","what":"To exclude error passages — exclude_passages","title":"To exclude error passages — exclude_passages","text":"exclude error passages","code":""},{"path":"https://kamataak.github.io/bspam/reference/exclude_passages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To exclude error passages — exclude_passages","text":"","code":"exclude_passages(passage)"},{"path":"https://kamataak.github.io/bspam/reference/exclude_passages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To exclude error passages — exclude_passages","text":"passage","code":""},{"path":"https://kamataak.github.io/bspam/reference/exclude_passages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To exclude error passages — exclude_passages","text":"passage data set without error passages","code":""},{"path":"https://kamataak.github.io/bspam/reference/fit.model.html","id":null,"dir":"Reference","previous_headings":"","what":"This is an interface function to call and run mcem. — fit.model","title":"This is an interface function to call and run mcem. — fit.model","text":"Copyright (C) 2021-2023 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/fit.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is an interface function to call and run mcem. — fit.model","text":"","code":"fit.model(   data = NA,   person.data = NA,   person.id = \"\",   task.id = \"\",   max.counts = \"\",   obs.counts = \"\",   time = \"\",   k.in = 5,   reps.in = 2,   ests.in = NA,   est = \"mcem\",   se = \"none\",   verbose = FALSE )"},{"path":"https://kamataak.github.io/bspam/reference/fit.model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is an interface function to call and run mcem. — fit.model","text":"data - reading data object comes prep function person.data - individual reading data person.id column name data represents unique personal identifier. task.id column name data represents unique passage identifier. max.counts column name data represents number words passage. obs.counts column name data represents words read correctly case. time column name data represents time, seconds, case. k.- number imputations, default 5 reps.- number Monte-Carlo iterations, default 2 ests.- given, mom function called get est.output est - estimator keyword, mcem bayes, default mcem se - standard error keyword / c(\"none\",\"analytic\", \"bootstrap\"), default none verbose - boolean, shows summary, default FALSE","code":""},{"path":"https://kamataak.github.io/bspam/reference/fit.model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is an interface function to call and run mcem. — fit.model","text":"MCEM list, bayes list","code":""},{"path":"https://kamataak.github.io/bspam/reference/fit.model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This is an interface function to call and run mcem. — fit.model","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/get.cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns cases (person and occasion) applied in [fit.model] function. — get.cases","title":"Returns cases (person and occasion) applied in [fit.model] function. — get.cases","text":"Returns cases (person occasion) applied [fit.model] function.","code":""},{"path":"https://kamataak.github.io/bspam/reference/get.cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns cases (person and occasion) applied in [fit.model] function. — get.cases","text":"","code":"get.cases(data)"},{"path":"https://kamataak.github.io/bspam/reference/get.cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns cases (person and occasion) applied in [fit.model] function. — get.cases","text":"data = person response data","code":""},{"path":"https://kamataak.github.io/bspam/reference/get.cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns cases (person and occasion) applied in [fit.model] function. — get.cases","text":"cases vector","code":""},{"path":"https://kamataak.github.io/bspam/reference/get.perfectcases.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns perfect cases (student and occasion) in which every word was read correctly. — get.perfectcases","title":"Returns perfect cases (student and occasion) in which every word was read correctly. — get.perfectcases","text":"Returns perfect cases (student occasion) every word read correctly.","code":""},{"path":"https://kamataak.github.io/bspam/reference/get.perfectcases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns perfect cases (student and occasion) in which every word was read correctly. — get.perfectcases","text":"","code":"get.perfectcases(data)"},{"path":"https://kamataak.github.io/bspam/reference/get.perfectcases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns perfect cases (student and occasion) in which every word was read correctly. — get.perfectcases","text":"data = person response data","code":""},{"path":"https://kamataak.github.io/bspam/reference/get.perfectcases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns perfect cases (student and occasion) in which every word was read correctly. — get.perfectcases","text":"perfect accurate case vector","code":""},{"path":"https://kamataak.github.io/bspam/reference/getBootstrapSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bootstrap SE\ncase is a single stu_season_id — getBootstrapSE","title":"Get bootstrap SE\ncase is a single stu_season_id — getBootstrapSE","text":"Added MAP function 07/14/2021 Modified bug MLE 07/23/2021 Modified EAP 10/28/2021","code":""},{"path":"https://kamataak.github.io/bspam/reference/getBootstrapSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bootstrap SE\ncase is a single stu_season_id — getBootstrapSE","text":"","code":"getBootstrapSE(   object,   person.data,   case = NA,   perfect.cases,   est = \"map\",   kappa = 1,   bootstrap = 100,   external = NULL )"},{"path":"https://kamataak.github.io/bspam/reference/getBootstrapSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bootstrap SE\ncase is a single stu_season_id — getBootstrapSE","text":"object - mcem class object person.data - individual response data case - case number perfect.cases - perfect accurate case est - SE type.(MLE, EAP, MAP.) default MAP kappa - Default kappa = 1, better 5 bootstrap - K number bootstrap, default 100 external - NULL, use unread task estimating","code":""},{"path":"https://kamataak.github.io/bspam/reference/getBootstrapSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bootstrap SE\ncase is a single stu_season_id — getBootstrapSE","text":"SE dataset","code":""},{"path":"https://kamataak.github.io/bspam/reference/get_errlist.html","id":null,"dir":"Reference","previous_headings":"","what":"To get a string of error passages that have no at least two readers — get_errlist","title":"To get a string of error passages that have no at least two readers — get_errlist","text":"get string error passages least two readers","code":""},{"path":"https://kamataak.github.io/bspam/reference/get_errlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To get a string of error passages that have no at least two readers — get_errlist","text":"","code":"get_errlist(passage)"},{"path":"https://kamataak.github.io/bspam/reference/get_errlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To get a string of error passages that have no at least two readers — get_errlist","text":"passage","code":""},{"path":"https://kamataak.github.io/bspam/reference/get_errlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To get a string of error passages that have no at least two readers — get_errlist","text":"string error passages","code":""},{"path":"https://kamataak.github.io/bspam/reference/log.initiating.html","id":null,"dir":"Reference","previous_headings":"","what":"This file includes the log functions of bspam package. — log.initiating","title":"This file includes the log functions of bspam package. — log.initiating","text":"Copyright (C) 2021-2023 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/log.initiating.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This file includes the log functions of bspam package. — log.initiating","text":"","code":"# S3 method for initiating log()"},{"path":"https://kamataak.github.io/bspam/reference/log.initiating.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This file includes the log functions of bspam package. — log.initiating","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/ log.initiating function, used log output.","code":""},{"path":"https://kamataak.github.io/bspam/reference/mcem.html","id":null,"dir":"Reference","previous_headings":"","what":"This is an interface function to call and run mcem. — mcem","title":"This is an interface function to call and run mcem. — mcem","text":"Copyright (C) 2021 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/mcem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is an interface function to call and run mcem. — mcem","text":"","code":"mcem(   object,   studentid = \"\",   passageid = \"\",   nwords.p = \"\",   wrc = \"\",   time = \"\",   k.in = 5,   reps.in = 2,   ests.in,   est = \"mcem\",   se = \"analytic\",   verbose = FALSE )"},{"path":"https://kamataak.github.io/bspam/reference/mcem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is an interface function to call and run mcem. — mcem","text":"object - reading data object comes prep function k.- number passages, default 5 reps.- repeats, default 2 ests.- given, mom function called get est.output est - estimator keyword, mcem mcmc se - standard error keyword, default analytic verbose - boolean, shows summary, default FALSE","code":""},{"path":"https://kamataak.github.io/bspam/reference/mcem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is an interface function to call and run mcem. — mcem","text":"MCEM list, MCMC list","code":""},{"path":"https://kamataak.github.io/bspam/reference/mcem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This is an interface function to call and run mcem. — mcem","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/orf.bayes.html","id":null,"dir":"Reference","previous_headings":"","what":"Copyright (C) 2021-2023 The ORF Project Team — orf.bayes","title":"Copyright (C) 2021-2023 The ORF Project Team — orf.bayes","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/orf.bayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copyright (C) 2021-2023 The ORF Project Team — orf.bayes","text":"","code":"orf.bayes(   time.data = NA,   count.data = NA,   numwords.pass = NA,   param = NA,   bayes.soft = \"jags\",   parallel = T,   n.chains = 1,   iter = 30000,   burn = 10000,   thin = 1 )"},{"path":"https://kamataak.github.io/bspam/reference/orf.bayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copyright (C) 2021-2023 The ORF Project Team — orf.bayes","text":"time.data #matrix, examinees X passages, raw time scale (seconds) count.data #matrix, examinees X passages, number words read correctly per passage numwords.pass #int. vec., vector number words per passage! param #chr. vec., parameters estimate. Default passage parameters! bayes.soft #chr., software use \"jags\" \"stan\"? parallel #logical, run parallel? \"T\" \"F\" n.chains #pos. int., number chains iter #pos. int., number iterations burn-period burn #pos. int., number burn-iterations thin #os. int, thinning interval, .k., period saving samples","code":""},{"path":"https://kamataak.github.io/bspam/reference/orf.bayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copyright (C) 2021-2023 The ORF Project Team — orf.bayes","text":"stan jags data set ()","code":""},{"path":"https://kamataak.github.io/bspam/reference/orf.bayes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Copyright (C) 2021-2023 The ORF Project Team — orf.bayes","text":"orf.bayes function. Estimates Oral Reading Fluency (ORF) model parameters fully Bayesian approach.","code":""},{"path":"https://kamataak.github.io/bspam/reference/passage.html","id":null,"dir":"Reference","previous_headings":"","what":"Passage reading data — passage","title":"Passage reading data — passage","text":"longitudinal data set containing passage reading information 300 students.","code":""},{"path":"https://kamataak.github.io/bspam/reference/passage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Passage reading data — passage","text":"","code":"passage"},{"path":"https://kamataak.github.io/bspam/reference/passage.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Passage reading data — passage","text":"data frame 5304 rows 7 variables: id.student unique student identifier occasion identifier longitudinal assessment occasions;   triannual assessment administered fall, winter, spring school year grade student grade level id.passage unique passage identifier numwords.pass total number words passage wrc words read correct sec seconds read passage","code":""},{"path":"https://kamataak.github.io/bspam/reference/passage.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Passage reading data — passage","text":"https://jnese.github.io/core-blog/","code":""},{"path":"https://kamataak.github.io/bspam/reference/passage2.html","id":null,"dir":"Reference","previous_headings":"","what":"Passage-level student data set — passage2","title":"Passage-level student data set — passage2","text":"data set consisted reading accuracy time data 12 passages 85 students.","code":""},{"path":"https://kamataak.github.io/bspam/reference/passage2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Passage-level student data set — passage2","text":"","code":"passage2"},{"path":"https://kamataak.github.io/bspam/reference/passage2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Passage-level student data set — passage2","text":"847 rows 7 variables: id.student unique student identifier occasion identifier longitudinal assessment occasions;   triannual assessment administered fall, winter, spring school year grade student grade level id.passage unique passage identifier numwords.pass total number words passage wrc words read correct sec seconds read passage","code":""},{"path":"https://kamataak.github.io/bspam/reference/passage2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Passage-level student data set — passage2","text":"https://jnese.github.io/core-blog/","code":""},{"path":"https://kamataak.github.io/bspam/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kamataak.github.io/bspam/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kamataak.github.io/bspam/reference/plot.mcem.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function to show graph of mcem class — plot.mcem","title":"Plot function to show graph of mcem class — plot.mcem","text":"Copyright (C) 2021-2023 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/plot.mcem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function to show graph of mcem class — plot.mcem","text":"","code":"# S3 method for mcem plot(object, X)"},{"path":"https://kamataak.github.io/bspam/reference/plot.mcem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function to show graph of mcem class — plot.mcem","text":"object = mcem object X = dataset plot ... = parameter","code":""},{"path":"https://kamataak.github.io/bspam/reference/plot.mcem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot function to show graph of mcem class — plot.mcem","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/prep.html","id":null,"dir":"Reference","previous_headings":"","what":"This file includes utilities of bspam package. — prep","title":"This file includes utilities of bspam package. — prep","text":"Copyright (C) 2021-2023 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/prep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This file includes utilities of bspam package. — prep","text":"","code":"prep(   data = data,   person.id = \"\",   task.id = \"\",   occasion = \"\",   group = \"\",   max.counts = \"\",   obs.counts = \"\",   time = \"\" )"},{"path":"https://kamataak.github.io/bspam/reference/prep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This file includes utilities of bspam package. — prep","text":"data = student response data","code":""},{"path":"https://kamataak.github.io/bspam/reference/prep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This file includes utilities of bspam package. — prep","text":"data list (data.long: data frame,                    data.wide: list Y, logT10, N, )","code":""},{"path":"https://kamataak.github.io/bspam/reference/prep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This file includes utilities of bspam package. — prep","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/ prep function prepares input data fit.model function","code":""},{"path":"https://kamataak.github.io/bspam/reference/preplong.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares data in a long format for [wcpm] — preplong","title":"Prepares data in a long format for [wcpm] — preplong","text":"Prepares data long format [wcpm]","code":""},{"path":"https://kamataak.github.io/bspam/reference/preplong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares data in a long format for [wcpm] — preplong","text":"","code":"preplong(   data,   person.id,   task.id,   occasion,   group,   max.counts,   obs.counts,   time )"},{"path":"https://kamataak.github.io/bspam/reference/preplong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares data in a long format for [wcpm] — preplong","text":"data = person response data","code":""},{"path":"https://kamataak.github.io/bspam/reference/preplong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares data in a long format for [wcpm] — preplong","text":"data frame","code":""},{"path":"https://kamataak.github.io/bspam/reference/prepwide.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares data in a wide format for [mcem]. — prepwide","title":"Prepares data in a wide format for [mcem]. — prepwide","text":"function return list 5 elements: Y: matrix words read correctly, rows represent cases (student occasion) columns represent passages logt10: [tibble::tibble()] words read correctly N: number cases per passage : number passages","code":""},{"path":"https://kamataak.github.io/bspam/reference/prepwide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares data in a wide format for [mcem]. — prepwide","text":"","code":"prepwide(data, person.id, task.id, max.counts, obs.counts, time)"},{"path":"https://kamataak.github.io/bspam/reference/prepwide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares data in a wide format for [mcem]. — prepwide","text":"data data frame. time column name data represents time, seconds, case. studentid column name data represents unique student identifier. passageid column name data represents unique passage identifier. numwords.p column name data represents number words passage. wrc column name data represents words read correctly case.","code":""},{"path":"https://kamataak.github.io/bspam/reference/run.mcem.html","id":null,"dir":"Reference","previous_headings":"","what":"This file includes the Base functions of bspam package. — run.mcem","title":"This file includes the Base functions of bspam package. — run.mcem","text":"Copyright (C) 2021-2023 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/run.mcem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This file includes the Base functions of bspam package. — run.mcem","text":"","code":"run.mcem(Y, logT10, N, I, k.in = 5, reps.in = 2, ests.in = NA, verbose = FALSE)"},{"path":"https://kamataak.github.io/bspam/reference/run.mcem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This file includes the Base functions of bspam package. — run.mcem","text":"Y = n x matrix reading scores -- missingness allowed logT10 = n x matrix log10(reading times) -- missingness allowed N = vector passage lengths = number passages k.= number imputations, default 5 reps.= number Monte-Carlo iterations, default 2 ests.= give, mom function called get est.output verbose - boolean, shows summary, default FALSE","code":""},{"path":"https://kamataak.github.io/bspam/reference/run.mcem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This file includes the Base functions of bspam package. — run.mcem","text":"mcem list ,b = parameters controlling binomial success probabilities, length alpha,beta = parameters controlling reading times, length var_tau = variance latent reading ability tau rho = correlation two latent variables","code":""},{"path":"https://kamataak.github.io/bspam/reference/run.mcem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This file includes the Base functions of bspam package. — run.mcem","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/ run.mcem function. Update Memo: 04/29/2021 Modified mcem function            based Nelis's updated. 10/28/2021 Modified mcem output","code":""},{"path":"https://kamataak.github.io/bspam/reference/run.scoring.html","id":null,"dir":"Reference","previous_headings":"","what":"This is run.scoring function. — run.scoring","title":"This is run.scoring function. — run.scoring","text":"Update Memo: 04/29/2021 Modified wcpm function            based Nelis's updated. 06/01/2021 Modified based Nelis's MAP function. 06/01/2021 Modified based Sarunya's BiEAP function. 06/20/2021 Modified based Nelis's updated MLE EAP 06/21/2021 Modified bug MAP function. 07/12/2021 Modified est.eqs function based Nelis's code. 07/13/2021 Added Map function bootstrap. 07/30/2021 Modified wcpm function based Sarunya's update","code":""},{"path":"https://kamataak.github.io/bspam/reference/run.scoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is run.scoring function. — run.scoring","text":"","code":"run.scoring(   object,   person.data,   task.data,   cases,   perfect.cases,   est = \"map\",   lo = -4,   hi = 4,   q = 100,   kappa = 1,   external = NULL,   type = NULL )"},{"path":"https://kamataak.github.io/bspam/reference/run.scoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is run.scoring function. — run.scoring","text":"object = fit.model object, given occur error stop running person.data = individual response task data task.data = estimate parameters data cases = individual occasion id vector perfect.cases = perfect accurate case est = estimator, c(\"mle\", \"map\", \"eap\", \"mcmc\"), default \"map\" lo = default -4 hi = default 4 q = default 100 kappa = default 1 external = NULL, use student read passages estimating type - output type, \"general\" \"orf\", default \"general\" output tau & theta. \"orf\" output wcpm","code":""},{"path":"https://kamataak.github.io/bspam/reference/run.scoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is run.scoring function. — run.scoring","text":"wcpm list","code":""},{"path":"https://kamataak.github.io/bspam/reference/scoring.html","id":null,"dir":"Reference","previous_headings":"","what":"This is an interface function to call and run scoring or bootstrap. — scoring","title":"This is an interface function to call and run scoring or bootstrap. — scoring","text":"Copyright (C) 2021-2023 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/scoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is an interface function to call and run scoring or bootstrap. — scoring","text":"","code":"scoring(   calib.data = NA,   person.data = NA,   person.id = \"\",   task.id = \"\",   occasion = \"\",   group = \"\",   max.counts = \"\",   obs.counts = \"\",   time = \"\",   cases = NULL,   est = \"map\",   se = \"analytic\",   failsafe = 0,   bootstrap = 100,   external = NULL,   type = \"general\" )"},{"path":"https://kamataak.github.io/bspam/reference/scoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is an interface function to call and run scoring or bootstrap. — scoring","text":"calib.data - fit.model class object person.data - individual reading data person.id column name data represents unique individual identifier. task.id column name data represents unique task identifier. occasion column name data represents unique occasion. group column name data represents unique group. max.counts column name data represents number words task. obs.counts column name data represents words read correctly case. time column name data represents time, seconds, case. cases - individual id vectors, directly use task data calib.data provided est - estimator keyword / c(\"mle\", \"map\", \"eap\", \"mcmc\"), default mcmc se - standard error keyword / c(\"analytic\", \"bootstrap\"), default analytic failsafe - retry time bootstrap / default 0, can set 5 ~ 50 external - NULL, use student read passages estimating type - output type, \"general\" \"orf\", default \"general\" output tau & theta. \"orf\" output wcpm bootstrp - set K number bootstrap / default 100","code":""},{"path":"https://kamataak.github.io/bspam/reference/scoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is an interface function to call and run scoring or bootstrap. — scoring","text":"scoring list Bootstrap dataset","code":""},{"path":"https://kamataak.github.io/bspam/reference/scoring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This is an interface function to call and run scoring or bootstrap. — scoring","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"summary the information of bootstrap class — summary.bootstrap","title":"summary the information of bootstrap class — summary.bootstrap","text":"Copyright (C) 2021-2023 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary the information of bootstrap class — summary.bootstrap","text":"","code":"# S3 method for bootstrap summary(   object,   digits = 4,   geterror = FALSE,   verbose = TRUE,   factor.scores = FALSE )"},{"path":"https://kamataak.github.io/bspam/reference/summary.bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary the information of bootstrap class — summary.bootstrap","text":"object = bootstrap object digits = print numeric specific digits geterror, summary error case, default FALSE verbose show summary screen, default TRUE factor.scores - theta tau output flag, default FALSE","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary the information of bootstrap class — summary.bootstrap","text":"table","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.bootstrap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summary the information of bootstrap class — summary.bootstrap","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.fit.model.html","id":null,"dir":"Reference","previous_headings":"","what":"summary the information of fit.model class — summary.fit.model","title":"summary the information of fit.model class — summary.fit.model","text":"Copyright (C) 2021-2023 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.fit.model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary the information of fit.model class — summary.fit.model","text":"","code":"# S3 method for fit.model summary(object, digits = 4, ...)"},{"path":"https://kamataak.github.io/bspam/reference/summary.fit.model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary the information of fit.model class — summary.fit.model","text":"object = object digits = print numeric specific digits ... = parameter","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.fit.model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary the information of fit.model class — summary.fit.model","text":"printing information","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.fit.model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summary the information of fit.model class — summary.fit.model","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.mcem.html","id":null,"dir":"Reference","previous_headings":"","what":"summary the information of mcem class — summary.mcem","title":"summary the information of mcem class — summary.mcem","text":"Copyright (C) 2021 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.mcem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary the information of mcem class — summary.mcem","text":"","code":"# S3 method for mcem summary(object, digits = 4, ...)"},{"path":"https://kamataak.github.io/bspam/reference/summary.mcem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary the information of mcem class — summary.mcem","text":"object = object digits = print numeric specific digits ... = parameter","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.mcem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary the information of mcem class — summary.mcem","text":"printing information","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.mcem.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summary the information of mcem class — summary.mcem","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.scoring.html","id":null,"dir":"Reference","previous_headings":"","what":"summary the information of wcpm class — summary.scoring","title":"summary the information of wcpm class — summary.scoring","text":"Copyright (C) 2021-2023 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.scoring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary the information of wcpm class — summary.scoring","text":"","code":"# S3 method for scoring summary(   object,   digits = 4,   verbose = TRUE,   factor.scores = FALSE,   show = \"short\" )"},{"path":"https://kamataak.github.io/bspam/reference/summary.scoring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary the information of wcpm class — summary.scoring","text":"object = object digits = print numeric specific digits verbose - boolean, TRUE, shows summary, default TRUE factor.scores - theta tau output flag, default FALSE show - output flag, \"long\" \"short\", default \"short\" output estimate result. \"long\" output estimate result data.","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.scoring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary the information of wcpm class — summary.scoring","text":"scoring dataset task information estimated score","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.scoring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summary the information of wcpm class — summary.scoring","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.wcpm.html","id":null,"dir":"Reference","previous_headings":"","what":"summary the information of wcpm class — summary.wcpm","title":"summary the information of wcpm class — summary.wcpm","text":"Copyright (C) 2021 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.wcpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summary the information of wcpm class — summary.wcpm","text":"","code":"# S3 method for wcpm summary(object, digits = 4, verbose = TRUE, factor.scores = FALSE)"},{"path":"https://kamataak.github.io/bspam/reference/summary.wcpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summary the information of wcpm class — summary.wcpm","text":"object = object digits = print numeric specific digits verbose - boolean, TRUE, shows summary, default TRUE factor.scores - theta tau output flag, default FALSE","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.wcpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summary the information of wcpm class — summary.wcpm","text":"wcpm dataset passage information estimated score","code":""},{"path":"https://kamataak.github.io/bspam/reference/summary.wcpm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"summary the information of wcpm class — summary.wcpm","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""},{"path":"https://kamataak.github.io/bspam/reference/wcpm.html","id":null,"dir":"Reference","previous_headings":"","what":"This is an interface function to call and run wcpm or bootstrap. — wcpm","title":"This is an interface function to call and run wcpm or bootstrap. — wcpm","text":"Copyright (C) 2021 ORF Project Team","code":""},{"path":"https://kamataak.github.io/bspam/reference/wcpm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is an interface function to call and run wcpm or bootstrap. — wcpm","text":"","code":"wcpm(   object,   studentid = \"\",   passageid = \"\",   season = \"\",   grade = \"\",   nwords.p = \"\",   wrc = \"\",   time = \"\",   stu.data = data,   cases = NA,   est = \"map\",   se = \"analytic\",   wo = \"internal\",   failsafe = 0,   bootstrap = 100,   external = NULL )"},{"path":"https://kamataak.github.io/bspam/reference/wcpm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is an interface function to call and run wcpm or bootstrap. — wcpm","text":"object - mcem class object stu.data - student reading data cases - student id vectors est - estimator keyword / c(\"mle\", \"map\", \"eap\") se - standard error keyword / c(\"analytic\", \"bootstrap\") wo - wcpm option / c(\"internal\", \"external\"), default internal failsafe - retry time bootstrap / default 0, can set 5 ~ 50 external - NULL, use student read passages estimating bootstrp - set K number bootstrap / default 100","code":""},{"path":"https://kamataak.github.io/bspam/reference/wcpm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This is an interface function to call and run wcpm or bootstrap. — wcpm","text":"WCPM list Bootstrap dataset","code":""},{"path":"https://kamataak.github.io/bspam/reference/wcpm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This is an interface function to call and run wcpm or bootstrap. — wcpm","text":"program free software; can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 3 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE.  See GNU General Public License details. copy GNU General Public License available http://www.gnu.org/licenses/","code":""}]
